name: üê≥ Build & Push Docker Images (Dev)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: dev
  cancel-in-progress: false

jobs:
  build-and-push:
    name: Build & Push (api-gateway, product, order)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure build cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build & Push API Gateway (dev)
        uses: docker/build-push-action@v5
        with:
          context: ./api-gateway
          file: ./api-gateway/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:dev
            ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build & Push Product Service (dev)
        uses: docker/build-push-action@v5
        with:
          context: ./product
          file: ./product/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/product-service:dev
            ${{ secrets.DOCKERHUB_USERNAME }}/product-service:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build & Push Order Service (dev)
        uses: docker/build-push-action@v5
        with:
          context: ./order
          file: ./order/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:dev
            ${{ secrets.DOCKERHUB_USERNAME }}/order-service:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  deploy:
    name: üöÄ Deploy to Dev Server
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/EProject-Phase-1
            echo "üßπ Pulling latest images..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:dev
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/product-service:dev
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/order-service:dev

            echo "üß∞ Stopping old containers..."
            docker compose down

            echo "üöÄ Starting new containers..."
            docker compose up -d

            echo "‚úÖ Deployment completed!"
